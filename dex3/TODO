Convert to python 3
./pervasives: converted


TODO [January 2018]:

* First week goal: complete checkpoints and question parsers.
  uniques use problem instead of question terms

   * Think about the structure of questions.  The overall structure
   seems to be that you have a prompt and multiple answers, each of
   which come with a point score.  

   * it would be great if we can interleave \choice and \begin{choice} \end{choice} is this possible. 

   * term "solution" is depracated, replaced with answer

   * update questionfr to print answers
   * update questionfr to convert ans to answers

TODO[Next major rewrite]

* blocks.py can be streamlined by using generic functions for books
  and courses as with other blocks it seems.


TODO [December 2017]:

* [Done: always making strings out of contents] 
Need a principled way to deal with contents.  Sometimes, you leave
  them as lits until you print it out as string inside blocks.
  Sometimes, you NEWLINE.join it in parser.py.

  You should just choose one and deal with that.


* For the next cleanup: you are using 'contents' key for
  books/chapters/sections etc.  For nearly all blocks.  This seems
  fragile because pyparsing sometimes wraps new parsers sometimes it
  does not.  For example, a course contans one book and it seems that
  if you use 'contents' key for both course and book, things get
  confused when you extract the 'contents' from a parser result.  One
  way to deal with this to group each parser.  This requires some
  changes to the parser.  It should not be hard but will take at least
  a few days I expect.

* When you do another cleanup on dex framework, consider following the
  dil style of keying parser objects.  Each "field" can have its
  label, and in addition could have a "contents" that would yield its
  contents.  This would streamline the dex2dil conversion.  I think
  that it would be possible to create a dilblock from a dex parser
  result because the structure would support accessing via keys and
  contents function (this is a kind of polymorphic application of the
  dil blocks).  An opposing view is that this could complicate dex
  parsing more, which is already more complex.  Maybe after all its is
  not a big deal for the dex blocks to have a to_dil_string function.


TODO [Novemmber 2017]

o Elabarotar

  * Should we keep user generated labels?  The only disadvantage is
    thath their labels may overleap with ours but this seems unlikely
    and could be prevented by prefixing all our labeles with
    'diderot:' or something like that.

  * Atom:
    Generate label, parent_unit, parent_atom, unit_order
  * Chapter:
    Generate: label, title, notes_order




TODO [September 2017]


o more uniform treatment of books and courses, add labels and numbers.

o curly braces in titles do i need them?  exp_title_latex exp_title
  distinction.  perhaps i do because of titles being used in blocks.


o invariants are getting complex.  we need some documentation and
another round of cleanup.


o in the middle of elaborating quizzes and problems.
  quite a few changes are needed probably...

o Extend parsers with course and notes blocks.

o syntax
    chapter ::= section+
    section ::= unit+
    unit    ::= atom+

-- older from August --
o enhance naming consistency like with dil/parser


