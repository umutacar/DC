\documentclass{course}
\title{Parallel and Sequential Algorithms}

\coursenumber{15210}
\semester{Spring2018}
\picture{/210/course/air-pavilion.jpg}
\website{http://www.cs.cmu.edu/~15210}

\providesbook{S18}
\providesassignment{9}


\begin{book}
\title{Algorithm Design: Parallel and Sequential}
\label{15210-2016}
\unique{15210S18}
\authors{Umut A. Acar and Guy Blelloch}


\begin{assignment}
\title{SegmentLab (Written)}
\duedate{9 April 2018}

\begin{asstproblem}
  \title{Tuning Parameters}
  \info
  Let's say you are given a graph in which every vertex has the same
  degree $d$. You want to use star partitioning to contract the graph, and you
  can bias your coin for deciding which vertices are centers and which
  are potential satellites. We'd like to try to maximize the number of vertices
  that will be removed in expectation.

  \begin{questionfr}
    \points 5
    \prompt
    First, let $x$ be the probability that a node is marked as a satellite.
    Give an expression for the probability that this node gets contracted.
    \answer

    The probability of a node contracting with an neighboring node is the probability that this node flipped a Tails and at least one adjacent node flipped a Heads.

    \begin{center}
      $P[$A node flipping Tails$] = x$\\
      $P[$All neighboring nodes flipping Tails$] = x^d$\\
      $P[$At least one neighbor is Heads$] = 1 - x^d$\\
      $P[$A node contracts with some neighbor$] = x(1-x^d)$
    \end{center}

  \end{questionfr}

  \begin{questionfr}
    \points 5
    \prompt
    What value of $x$ maximizes the expected number of contractions?
    \answer

    The expected number of nodes we contract by linearity of expectation is $|V|x(1-x^d)$.\\
    We can solve this using first order conditions. (More formally we can verify that this function is concave when $x \in [0,1]$, but you could have just plotted this.)\\
    Thus to maximize x, solve:
    \begin{gather*}
      |V|\frac{\partial}{\partial x}(x(1-x^d)) = 0 \Longrightarrow \\
      1 - (d+1)x^d = 0 \Longrightarrow \\
      x = (\frac{1}{d+1})^{1/d}
    \end{gather*}
  \end{questionfr}
\end{asstproblem}

\begin{asstproblem}
  \title{Tre Contraction with Edge Partitioning}
  \info
  Recall that edge partitioning is a graph contraction strategy that
  partitions the graph into disjoint connected components consisting of
  at most 2 vertices each (also called a vertex matching). For arbitrary
  graphs, we have seen that edge partitioning is not a sufficient
  strategy because it cannot always remove at least a constant fraction
  of the number of edges in expectation. However, edge
  partitioning \emph{is} viable in certain situations -- for example,
  with certain kinds of trees.

  Define a 3-tree to be an undirected, acyclic, connected graph where
  \textbf{every vertex has degree at most 3}. We want to prove that we can
  contract a 3-tree using edge partitioning in expected $O(n)$ work and
  $O(\log^2 n)$ span.

  \begin{questionfr}
    \points 10
    \prompt
    Prove that, in a 3-tree, the number of vertices with degree strictly less
    than 3 is at least $\frac{n}{k}$ for some constant $k > 1$. Provide a specific
    value of $k$.
    \answer
    \newcommand{\degr}{\mathit{deg}}
    Let $L \subseteq V$ be the set of vertices with degree $< 3$. Each $v \in L$ has degree at least 1. Each $v \in V \setminus L$ has degree at least 3, therefore
    \begin{align*}
      \sum_{v \in V} \degr(v) &= \sum_{v \in L} \degr(v)\ + \sum_{v \in V \setminus L} \degr(v) \\
      &\geq 1 \cdot |L|\ +\ 3 \cdot |V \setminus L| \\
      &= |L| + 3(n - |L|) \\
      &= 3n - 2|L|
    \end{align*}

    We know $\sum_{v \in V} \degr(v) = 2 \cdot |E| = 2n - 2$:
    \begin{align*}
      2n-2 &\geq 3n - 2|L| \\
      2|L| &\geq n+2 \\
      |L| &\geq \frac{n}{2} + 1
    \end{align*}
    And so we choose $k=2$.
  \end{questionfr}

  \begin{questionfr}
    \points 20
    \prompt
    Describe a randomized strategy for selecting edges to contract in a 3-tree.
    Show that in expectation, one round of contraction will remove at least a
    constant fraction of the number of edges. For each round, your strategy must be
    implementable in $O(n)$ work and $O(\log n)$ span; you may assume the vertices
    are labeled as integers for cost analysis.

    \emph{(Hint: Your solution will need to use $k$ from the previous question. Make sure the graph satisfies the 3-tree invariant throughout the contraction process.)}

    \answer
    \newcommand{\degr}{\mathit{deg}}

    We assign unique random numbers to the edges. We choose an edge $e = (u,v)$ for contraction if and only if
    \begin{enumerate}
    \item $e$'s assigned number is the local maximum among all edges incident upon $u$ and $v$
    \item Either $\degr(u) < 3$ or $\degr(v) < 3$. This is equivalent to $\degr(u) + \degr(v) \leq 5$.
    \end{enumerate}
    The first condition has probability at least $\frac{1}{4}$. The second condition has probability at least $1 - \left(1 - \frac{1}{k}\right)^2$. For $k=2$ as shown in 7.1, this simplifies to $\frac{3}{4}$. Therefore the probability of an edge being chosen is at least $\frac{1}{4} \cdot \frac{3}{4} = \frac{3}{16}$.

    By linearity of expectation, the expected number of edges chosen for contraction is at least $\frac{3|E|}{16}$.

    Note that this strategy preserves a maximum degree of 3 for the tree, since if $\degr(u) + \degr(v) \leq 5$ then the degree of the resulting super vertex is at most 3.

  \end{questionfr}

  \begin{questionfr}
    \points 5
    \prompt
    Using the results of the previous part, justify the entire contraction process has expected $O(n)$ work and
    $O(\log^2 n)$ span.
    \answer
    Since we contract a constant fraction of edges with each iteration, the number of edges decreases geometrically over $O(\log n)$ levels. Our contraction strategy is implementable in $O(n)$ work, therefore the work recurrence is root-dominated, and the total work is $O(n)$. We have $O(\log n)$ span at each level over $O(\log n)$ levels, therefore the span of contracting $T$ is $O(\log^2 n)$.

    The recurrences for this problem are:
    \begin{align*}
      W(n) &\leq W\left(\frac{13n}{16}\right) + O(n) \\
      S(n) &\leq S\left(\frac{13n}{16}\right) + O(\log n)
    \end{align*}
  \end{questionfr}

\end{asstproblem}
\end{assignment}
\end{book}
