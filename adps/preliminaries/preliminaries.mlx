<?xml version='1.0' encoding='UTF-8'?>
<block name="chapter">
<field name="title">
<![CDATA[
Preliminaries
]]>
</field> 
<field name="title_src">
<![CDATA[
Preliminaries
]]>
</field> 
<field name="label">
ch:preliminaries
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="intro">
<![CDATA[
<p>This chapter presents an overview of basic mathematical definitions used throughout the book. We assume familiarity with college-level mathematics. This chapter does not aim to be complete (and is far from it) but tries to cover the most relevant material to the course. More details can be found in standard texts.</p>
]]>
</field> 
<field name="intro_src">
<![CDATA[
This chapter presents an overview of basic mathematical definitions
used throughout the book.
%
We assume familiarity with college-level mathematics. 
%
This chapter does not aim to be complete (and is far from it) but
tries to cover the most relevant material to the course.  
%
More details can be found in standard texts.
]]>
</field> 
<block name="section">
<field name="title">
<![CDATA[
Sets and Relations
]]>
</field> 
<field name="title_src">
<![CDATA[
Sets and Relations
]]>
</field> 
<field name="label">
sec:preliminaries_sets
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="intro">
<![CDATA[
<p>This section presents a review of some basic definitions on sets and relations.</p>
]]>
</field> 
<field name="intro_src">
<![CDATA[
This section presents a review of some basic definitions on sets and
relations.
]]>
</field> 
<block name="subsection">
<field name="title">
<![CDATA[
Sets
]]>
</field> 
<field name="title_src">
<![CDATA[
Sets
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
Shard
]]>
</field> 
<field name="title_src">
<![CDATA[
Shard
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>This atom will be shard.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
This atom will be shard.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A  <span style="color: black"><span><strong><em>set</em></strong></span></span> is a collection of distinct objects. The objects that are contained in a set, are called  <span style="color: black"><span><strong><em>members</em></strong></span></span> or the  <span style="color: black"><span><strong><em>elements</em></strong></span></span> of the set. The elements of a set must be distinct: a set may not contain the same element more than once. The set that contains no elements is called the  <span style="color: black"><span><strong><em>empty set</em></strong></span></span> and is denoted by <span class="math inline">\(\{\}\)</span> or <span class="math inline">\(\emptyset\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
A~\defn{set} is a collection of distinct objects.  The objects that
are contained in a set, are called~\defn{members} or
the~\defn{elements} of the set.  The elements of a set must be
distinct: a set may not contain the same element more than once. The
set that contains no elements is called the~\defn{empty set} and is
denoted by $\{\}$ or $\emptyset$.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
Specification
]]>
</field> 
<field name="title_src">
<![CDATA[
Specification
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Sets can be specified intentionally, by mathematically describing their members. For example, the set of natural numbers, traditionally written as <span class="math inline">\(\mathbb{N}\)</span>, can be specified  <span style="color: black"><span><strong><em>intentionally</em></strong></span></span> as the set of all nonnegative integral numbers. Sets can also be specified  <span style="color: black"><span><strong><em>extensionally</em></strong></span></span> by listing their members. For example, the set <span class="math inline">\(\mathbb{N}= \{0, 1, 2, \ldots\}.\)</span> We say that an element <span class="math inline">\(x\)</span> is a <span><em>member of</em></span> <span class="math inline">\(A\)</span>, written <span class="math inline">\(x \in  
A\)</span>, if <span class="math inline">\(x\)</span> is in <span class="math inline">\(A\)</span>. More generally, sets can be specified using  <span style="color: black"><span><strong><em>set comprehensions</em></strong></span></span>, which offer a compact and precise way to define sets by mixing intentional and extensional notation.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Sets can be specified intentionally, by mathematically describing
their members.
%
For example, the set of natural numbers, traditionally written as
$\tynat$, can be specified~\defn{intentionally} as the set of all
nonnegative integral numbers.
%
Sets can also be specified~\defn{extensionally} by listing their members.
For example, the set $\tynat = \{0, 1, 2, \ldots\}.$
%
We say that an element $x$ is a {\em member of} $A$, written $x \in
A$, if $x$ is in $A$.  
%
More generally, sets can be specified using~\defn{set comprehensions},
which offer a compact and precise way to define sets by mixing
intentional and extensional notation.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Union and Intersection
]]>
</field> 
<field name="title_src">
<![CDATA[
Union and Intersection
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>For two sets <span class="math inline">\(A\)</span> and <span class="math inline">\(B\)</span>, the  <span style="color: black"><span><strong><em>union</em></strong></span></span> <span class="math inline">\(A \cup B\)</span> is defined as the set containing all the elements of <span class="math inline">\(A\)</span> and <span class="math inline">\(B\)</span>. Symmetrically, their  <span style="color: black"><span><strong><em>intersection</em></strong></span></span>, <span class="math inline">\(A \cap B\)</span> is the defined as the set containing the elements that are member of both <span class="math inline">\(A\)</span> and <span class="math inline">\(B\)</span>. We say that <span class="math inline">\(A\)</span> and <span class="math inline">\(B\)</span> are  <span style="color: black"><span><strong><em>disjoint</em></strong></span></span> if their intersection is the empty set, i.e., <span class="math inline">\(A \cap B = \emptyset\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
For two sets $A$ and $B$, the~\defn{union} $A \cup B$ is defined as
the set containing all the elements of $A$ and $B$.  Symmetrically,
their~\defn{intersection}, $A \cap B$ is the defined as the set
containing the elements that are member of both $A$ and $B$.
% 
We say that $A$ and $B$ are~\defn{disjoint} if their intersection is
the empty set, i.e., $A \cap B = \emptyset$.
%
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<atom name="definition">
<field name="title">
<![CDATA[
Cartesian Product
]]>
</field> 
<field name="title_src">
<![CDATA[
Cartesian Product
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Consider two sets <span class="math inline">\(A\)</span> and <span class="math inline">\(B\)</span>. The  <span style="color: black"><span><strong><em>Cartesian product <span class="math inline">\(A \times  
  B\)</span></em></strong></span></span> is the set of all ordered pairs <span class="math inline">\((a,b)\)</span> where <span class="math inline">\(a \in A\)</span> and <span class="math inline">\(b  
\in B\)</span>, i.e., <span class="math display">\[A \times B = \left\{ (a,b) : a \in A, b \in B \right\}.\]</span></p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Consider two sets~$A$ and~$B$.  The~\defn{Cartesian product $A \times
  B$} is the set of all ordered pairs $(a,b)$ where $a \in A$ and $b
\in B$, i.e.,
%
\[
A \times B = \cset{(a,b) : a \in A, b \in B}.
\]
]]>
</field> 
</atom> 

<atom name="example">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
ex:prelim_cartesian
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>The Cartesian product of <span class="math inline">\(A = \left\{ 0,1,2,3 \right\}\)</span> and <span class="math inline">\(B = \left\{ a,b \right\}\)</span> is <span class="math display">\[\begin{array}{lll}  
A \times B = &amp; \{ &amp; (0,a),(0,b),(1,a),(1,b),  
\\  
             &amp;    &amp; (2,a),(2,b),(3,a),(3,b)   
\\  
             &amp; \}.  
\end{array}\]</span></p>
]]>
</field> 
<field name="body_src">
<![CDATA[
The Cartesian product of $A = \cset{0,1,2,3}$ and $B = \cset{a,b}$ is
\[
\begin{array}{lll}
A \times B = & \{ & (0,a),(0,b),(1,a),(1,b),
\\
             &    & (2,a),(2,b),(3,a),(3,b) 
\\
             & \}.
\end{array}
\]
]]>
</field> 
</atom> 
</block> 

</block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<atom name="definition">
<field name="title">
<![CDATA[
Set Partition
]]>
</field> 
<field name="title_src">
<![CDATA[
Set Partition
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Given a set <span class="math inline">\(A\)</span>, a partition of <span class="math inline">\(A\)</span> is a set <span class="math inline">\(P\)</span> of non-empty subsets of <span class="math inline">\(A\)</span> such that each element of <span class="math inline">\(P\)</span> is in exactly one subset in <span class="math inline">\(P\)</span>. We refer to each element of <span class="math inline">\(P\)</span> as a  <span style="color: black"><span><strong><em>block</em></strong></span></span> or a  <span style="color: black"><span><strong><em>part</em></strong></span></span> and the set <span class="math inline">\(P\)</span> as a  <span style="color: black"><span><strong><em>partition</em></strong></span></span> of <span class="math inline">\(A\)</span>. More precisely, <span class="math inline">\(P\)</span> is a partition of <span class="math inline">\(A\)</span> if the following conditions hold:</p>
<ul>
<li><p>if <span class="math inline">\(B \in P\)</span>, then <span class="math inline">\(B \not= \emptyset\)</span>,</p></li>
<li><p>if <span class="math inline">\(A = \bigcup_{B \in P}{B}\)</span>, and</p></li>
<li><p>if <span class="math inline">\(B, C \in P\)</span>, then <span class="math inline">\(B = C\)</span> or <span class="math inline">\(B \cap C = \emptyset\)</span>.</p></li>
</ul>
]]>
</field> 
<field name="body_src">
<![CDATA[
Given a set $A$, a partition of $A$ is a set $P$ of non-empty subsets
of $A$ such that each element of $P$ is in exactly one subset in $P$.
%
We refer to each element of $P$ as a~\defn{block} or a~\defn{part} and
the set $P$ as a~\defn{partition} of $A$.
%
More precisely, $P$ is a partition of $A$ if the following conditions
hold:
\begin{itemize}
\item if $B \in P$, then $B \not= \emptyset$,
\item if $A = \bigcup_{B \in P}{B}$, and
\item if $B, C \in P$, then $B = C$ or $B \cap C = \emptyset$.
\end{itemize}
]]>
</field> 
</atom> 

<atom name="example">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>If <span class="math inline">\(A = \{1, 2, 3, 4, 5, 6 \}\)</span> then <span class="math inline">\(P = \{ \{1,3,5\}, \{2, 4, 6\} \}\)</span> is a partition of <span class="math inline">\(A\)</span>. The set <span class="math inline">\(\{1,3,5\}\)</span> is a block.</p>
<p>The set <span class="math inline">\(Q = \{ \{1,3,5,6\}, \{2, 4, 6\} \}\)</span> is a not partition of <span class="math inline">\(A\)</span>, because the element <span class="math inline">\(6\)</span> is contained in any of the blocks.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
If $A = \{1, 2, 3, 4, 5, 6 \}$ then $P = \{ \{1,3,5\}, \{2, 4, 6\} \}$
is a partition of $A$.  The set $\{1,3,5\}$ is a block.

The set $Q = \{ \{1,3,5,6\}, \{2, 4, 6\} \}$ is a not partition of
$A$, because the element $6$ is contained in any of the blocks.
]]>
</field> 
</atom> 
</block> 

</block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<atom name="definition">
<field name="title">
<![CDATA[
Kleene Operators
]]>
</field> 
<field name="title_src">
<![CDATA[
Kleene Operators
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>For any set <span class="math inline">\(\Sigma\)</span>, its  <span style="color: black"><span><strong><em>Kleene star</em></strong></span></span> <span class="math inline">\(\Sigma^*\)</span> is the set of all possible strings consisting of members of <span class="math inline">\(\Sigma\)</span>, including the empty string.</p>
<p>For any set <span class="math inline">\(\Sigma\)</span>, its  <span style="color: black"><span><strong><em>Kleene plus</em></strong></span></span> <span class="math inline">\(\Sigma^+\)</span> is the set of all possible strings consisting of members <span class="math inline">\(\Sigma\)</span>, excluding the empty string.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
For any set $\Sigma$, its~\defn{Kleene star} $\Sigma^*$ is the set of
all possible strings consisting of members of $\Sigma$, including the
empty string.

For any set $\Sigma$, its~\defn{Kleene plus} $\Sigma^+$ is the set of
all possible strings consisting of members $\Sigma$, excluding the
empty string.
]]>
</field> 
</atom> 

<atom name="example">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Given <span class="math inline">\(\Sigma = \{\texttt{a},\texttt{b}\}\)</span>, <span class="math display">\[\begin{array}{rl}  
\Sigma^*   
%  
=   
%  
\{  
&amp;  
\text{&#39;}\,{}\,\text{&#39;},   
%  
\\  
&amp;  
\text{&#39;}\,{\texttt{a}}\,\text{&#39;}, \text{&#39;}\,{\texttt{b}}\,\text{&#39;},   
%  
\\  
&amp;  
\text{&#39;}\,{\texttt{aa}}\,\text{&#39;}, \text{&#39;}\,{\texttt{ab}}\,\text{&#39;},   
\text{&#39;}\,{\texttt{ba}}\,\text{&#39;}, \text{&#39;}\,{\texttt{bb}}\,\text{&#39;},   
\\  
%  
&amp;  
\text{&#39;}\,{\texttt{aaa}}\,\text{&#39;}, \text{&#39;}\,{\texttt{aab}}\,\text{&#39;}, \text{&#39;}\,{\texttt{aba}}\,\text{&#39;},  
\text{&#39;}\,{\texttt{abb}}\,\text{&#39;},  
\\  
&amp; \text{&#39;}\,{\texttt{baa}}\,\text{&#39;}, \text{&#39;}\,{\texttt{bab}}\,\text{&#39;}, \text{&#39;}\,{\texttt{bba}}\,\text{&#39;}, \text{&#39;}\,{\texttt{bbb}}\,\text{&#39;},  
\\  
%  
&amp;  
\ldots  
\\  
\} &amp;  
\end{array}\]</span> and <span class="math display">\[\begin{array}{rl}  
\Sigma^+   
%  
=   
%  
\{  
&amp;  
\text{&#39;}\,{\texttt{a}}\,\text{&#39;}, \text{&#39;}\,{\texttt{b}}\,\text{&#39;},   
\\  
%  
&amp;  
\text{&#39;}\,{\texttt{aa}}\,\text{&#39;}, \text{&#39;}\,{\texttt{ab}}\,\text{&#39;},   
\text{&#39;}\,{\texttt{ba}}\,\text{&#39;}, \text{&#39;}\,{\texttt{bb}}\,\text{&#39;},   
\\  
%  
&amp;  
\text{&#39;}\,{\texttt{aaa}}\,\text{&#39;}, \text{&#39;}\,{\texttt{aab}}\,\text{&#39;}, \text{&#39;}\,{\texttt{aba}}\,\text{&#39;}, \text{&#39;}\,{\texttt{abb}}\,\text{&#39;},   
\\  
&amp;  
\text{&#39;}\,{\texttt{baa}}\,\text{&#39;}, \text{&#39;}\,{\texttt{bab}}\,\text{&#39;}, \text{&#39;}\,{\texttt{bba}}\,\text{&#39;},   
\text{&#39;}\,{\texttt{bbb}}\,\text{&#39;},  
\\  
%  
&amp; \ldots  
\\  
\} &amp;   
\\  
\end{array}\]</span></p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Given $\Sigma = \{\texttt{a},\texttt{b}\}$,
\[
\begin{array}{rl}
\Sigma^* 
%
= 
%
\{
&
\str{}, 
%
\\
&
\str{\texttt{a}}, \str{\texttt{b}}, 
%
\\
&
\str{\texttt{aa}}, \str{\texttt{ab}}, 
\str{\texttt{ba}}, \str{\texttt{bb}}, 
\\
%
&
\str{\texttt{aaa}}, \str{\texttt{aab}}, \str{\texttt{aba}},
\str{\texttt{abb}},
\\
& \str{\texttt{baa}}, \str{\texttt{bab}}, \str{\texttt{bba}}, \str{\texttt{bbb}},
\\
%
&
\ldots
\\
\} &
\end{array}
\]
%
and
%
\[
\begin{array}{rl}
\Sigma^+ 
%
= 
%
\{
&
\str{\texttt{a}}, \str{\texttt{b}}, 
\\
%
&
\str{\texttt{aa}}, \str{\texttt{ab}}, 
\str{\texttt{ba}}, \str{\texttt{bb}}, 
\\
%
&
\str{\texttt{aaa}}, \str{\texttt{aab}}, \str{\texttt{aba}}, \str{\texttt{abb}}, 
\\
&
\str{\texttt{baa}}, \str{\texttt{bab}}, \str{\texttt{bba}}, 
\str{\texttt{bbb}},
\\
%
& \ldots
\\
\} & 
\\
\end{array}
\]
]]>
</field> 
</atom> 
</block> 

</block></block> 

<block name="subsection">
<field name="title">
<![CDATA[
Relations
]]>
</field> 
<field name="title_src">
<![CDATA[
Relations
]]>
</field> 
<field name="label">
subsection:preliminaries_relations
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Relation
]]>
</field> 
<field name="title_src">
<![CDATA[
Relation
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A  <span style="color: black"><span><strong><em>(binary)  <span style="color: black"><span><strong><em>relation</em></strong></span></span> from a set <span class="math inline">\(A\)</span> to set <span class="math inline">\(B\)</span></em></strong></span></span> is a subset of the Cartesian product of <span class="math inline">\(A\)</span> and <span class="math inline">\(B\)</span>. For a relation <span class="math inline">\(R \subseteq A \times B\)</span>,</p>
<ul>
<li><p>the set <span class="math inline">\(\left\{ a : (a,b) \in  
  R \right\}\)</span> is referred to as the  <span style="color: black"><span><strong><em>domain</em></strong></span></span> of <span class="math inline">\(R\)</span>, and</p></li>
<li><p>the set <span class="math inline">\(\left\{ b  
  : (a,b) \in R \right\}\)</span> is referred to as the  <span style="color: black"><span><strong><em>range</em></strong></span></span> of <span class="math inline">\(R\)</span>.</p></li>
</ul>
]]>
</field> 
<field name="body_src">
<![CDATA[
A~\defn{(binary)~\defn{relation} from a set~$A$ to set~$B$} is a
subset of the Cartesian product of~$A$ and~$B$.  
%
For a relation~$R \subseteq A \times B$, 
\begin{itemize}
\item the set~$\cset{a : (a,b) \in
  R}$ is referred to as the~\defn{domain} of $R$, and 
\item 
the set~$\cset{b
  : (a,b) \in R}$ is referred to as the~\defn{range} of $R$.
\end{itemize}
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Function
]]>
</field> 
<field name="title_src">
<![CDATA[
Function
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A  <span style="color: black"><span><strong><em>mapping from <span class="math inline">\(A\)</span> to <span class="math inline">\(B\)</span></em></strong></span></span> is a relation <span class="math inline">\(R \subset A \times B\)</span> such that <span class="math inline">\(|R| = |\mbox{domain}(R)|\)</span>, i.e., for every <span class="math inline">\(a\)</span> in the domain of <span class="math inline">\(R\)</span> there is only one <span class="math inline">\(b\)</span> such that <span class="math inline">\((a,b) \in R\)</span>. A mapping is also called a  <span style="color: black"><span><strong><em>function</em></strong></span></span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
A~\defn{mapping from $A$ to $B$} is a relation $R \subset A \times B$
such that $|R| = |\mbox{domain}(R)|$, i.e., for every $a$ in the
domain of $R$ there is only one $b$ such that $(a,b) \in R$.  A
mapping is also called a~\defn{function}.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="example">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
ex:prelim_sequencesdef
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Consider the sets <span class="math inline">\(A = \left\{ 0,1,2,3 \right\}\)</span> and <span class="math inline">\(B = \left\{ a,b \right\}\)</span>.</p>
<p>The set: <span class="math display">\[X = \left\{ (0,a),(0,b),(1,b),(3,a) \right\}\]</span> is a relation from <span class="math inline">\(A\)</span> to <span class="math inline">\(B\)</span> since <span class="math inline">\(X \subset A \times B\)</span>, but not a mapping (function) since <span class="math inline">\(0\)</span> is repeated.</p>
<p>The set <span class="math display">\[Y = \left\{ (0,a),(1,b),(3,a) \right\}\]</span> is both a relation and a function from <span class="math inline">\(A\)</span> to <span class="math inline">\(B\)</span> since each element only appears once on the left.</p>
<p>The domain of <span class="math inline">\(Y\)</span> is <span class="math inline">\(\left\{ 0,1,3 \right\}\)</span> and the range is <span class="math inline">\(\left\{ a,b \right\}\)</span>. It is, however, not a sequence since there is a gap in the domain.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Consider the sets $A = \cset{0,1,2,3}$ and $B = \cset{a,b}$.

The set:
\[X = \cset{(0,a),(0,b),(1,b),(3,a)}\]
is a relation from $A$ to $B$ since $X \subset A \times B$, but not a mapping (function) since $0$
is repeated.   

The set
\[Y = \cset{(0,a),(1,b),(3,a)}\]
is both a relation and a function from $A$ to $B$ since each element
only appears once on the left.  

The domain of $Y$ is $\cset{0,1,3}$ and the range is $\cset{a,b}$.  It
is, however, not a sequence since there is a gap in the domain.
]]>
</field> 
</atom> 

</block></block></block> 
</block> 

<block name="section">
<field name="title">
<![CDATA[
Graph Theory
]]>
</field> 
<field name="title_src">
<![CDATA[
Graph Theory
]]>
</field> 
<field name="label">
sec:preliminaries_graph-theory
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="intro">
<![CDATA[
<p>This section reviews the basic graph theory definitions and terminology that we use in this book.</p>
]]>
</field> 
<field name="intro_src">
<![CDATA[
This section reviews the basic graph theory definitions and
terminology that we use in this book.
]]>
</field> 
<block name="subsection">
<field name="title">
<![CDATA[
Basic Definitions
]]>
</field> 
<field name="title_src">
<![CDATA[
Basic Definitions
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="teachnote">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>TODO</p>
<p>Hamiltonian paths/cycles.</p>
<p>Define Diamater</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
TODO

Hamiltonian paths/cycles.

Define Diamater
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Directed Graph
]]>
</field> 
<field name="title_src">
<![CDATA[
Directed Graph
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A  <span style="color: black"><span><strong><em>directed graph</em></strong></span></span> or ( <span style="color: black"><span><strong><em>digraph</em></strong></span></span>) is a pair <span class="math inline">\(G = (V,A)\)</span> where</p>
<ul>
<li><p><span class="math inline">\(V\)</span> is a set of  <span style="color: black"><span><strong><em>vertices</em></strong></span></span>, and</p></li>
<li><p><span class="math inline">\(A \subseteq V \times V\)</span> is a set of  <span style="color: black"><span><strong><em>directed edges</em></strong></span></span> or   <span style="color: black"><span><strong><em>arcs</em></strong></span></span>.</p></li>
</ul>
]]>
</field> 
<field name="body_src">
<![CDATA[
A~\defn{directed graph} or (\defn{digraph}) is a pair $G = (V,A)$
where
\begin{itemize}
\item $V$ is a set of~\defn{vertices}, and

\item $A \subseteq V \times V$ is a set of~\defn{directed edges} or
 ~\defn{arcs}.
\end{itemize}
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="note">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>In a digraph, each arc is an ordered pair <span class="math inline">\(e = (u,v)\)</span>. A digraph can have  <span style="color: black"><span><strong><em>self loops</em></strong></span></span> <span class="math inline">\((u,u)\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
In a digraph, each arc is an ordered pair $e = (u,v)$.  A digraph can
have~\defn{self loops} $(u,u)$.  
%
%\exref{preliminaries_graphs_examples} shows a digraph with $4$
%vertices and $4$ arcs.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Undirected graph
]]>
</field> 
<field name="title_src">
<![CDATA[
Undirected graph
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>An  <span style="color: black"><span><strong><em>undirected graph</em></strong></span></span> is a pair <span class="math inline">\(G = (V,E)\)</span> where</p>
<ul>
<li><p><span class="math inline">\(V\)</span> is a set of  <span style="color: black"><span><strong><em>vertices</em></strong></span></span> (or nodes), and</p></li>
<li><p><span class="math inline">\(E \subseteq  \binom{V}{2}\)</span> is a set of edges.</p></li>
</ul>
]]>
</field> 
<field name="body_src">
<![CDATA[
An~\defn{undirected graph} is a pair $G = (V,E)$ where
\begin{itemize}
\item  $V$ is a set of~\defn{vertices} (or nodes), and
\item  $E \subseteq  \binom{V}{2}$ is a set of edges.
\end{itemize}
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="note">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>In an undirected graph, each edge is an unordered pair <span class="math inline">\(e = \{u,v\}\)</span> (or equivalently <span class="math inline">\(\{v,u\}\)</span>). By this definition an undirected graph cannot have self loops since <span class="math inline">\(\{v,v\} = \{v\} \not\in \binom{V}{2}\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
In an undirected graph, each edge is an unordered pair $e = \{u,v\}$
(or equivalently $\{v,u\}$).  By this definition an undirected graph
cannot have self loops since $\{v,v\} = \{v\} \not\in \binom{V}{2}$.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="example">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
ex:preliminaries_graphs_examples
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>An example directed graph with <span class="math inline">\(4\)</span> vertices:</p>
<p><img src="./media/directed1.jpg" alt="image" style="width:2in" /></p>
<p>An undirected graph on <span class="math inline">\(4\)</span> vertices, representing the Königsberg problem. (Picture Source: Wikipedia):</p>
<p><img src="./media/konig.jpg" alt="image" style="width:2in" /></p>
]]>
</field> 
<field name="body_src">
<![CDATA[
An example directed graph with $4$ vertices:

\includegraphics[width=2in]{./media/directed1.jpg} 

An undirected graph on $4$ vertices, representing the
  K\"onigsberg problem. (Picture Source: Wikipedia):

\includegraphics[width=2in]{./media/konig.jpg}
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="remark">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>While directed graphs represent possibly asymmetric relationships, undirected graphs represent symmetric relationships. Directed graphs are therefore more general than undirected graphs because an undirected graph can be represented by a directed graph by replacing an edge with two arcs, one in each direction.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
While directed graphs represent possibly asymmetric relationships,
undirected graphs represent symmetric relationships.
%
Directed graphs are therefore more general than undirected graphs
because an undirected graph can be represented by a directed graph by
replacing an edge with two arcs, one in each direction.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Graphs come with a lot of terminology, but fortunately most of it is intuitive once we understand the concept. In this section, we consider graphs that do not have any data associated with edges, such as weights. In the next section, we consider weighted graphs, where the weights on edges can represent a distance, a capacity or the strength of the connection.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Graphs come with a lot of terminology, but fortunately most of it is
intuitive once we understand the concept.  
%
In this section, we consider graphs that do not have any data
associated with edges, such as weights.
%
In the next section, we consider weighted graphs, where the weights on
edges can represent a distance, a capacity or the strength of the
connection.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Neighbors
]]>
</field> 
<field name="title_src">
<![CDATA[
Neighbors
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A vertex <span class="math inline">\(u\)</span> is a  <span style="color: black"><span><strong><em>neighbor</em></strong></span></span> of, or equivalently  <span style="color: black"><span><strong><em>adjacent</em></strong></span></span> to, a vertex <span class="math inline">\(v\)</span> in a graph <span class="math inline">\(G = (V,E)\)</span> if there is an edge <span class="math inline">\(\{u,v\}  
 \in E\)</span>. For a directed graph a vertex <span class="math inline">\(u\)</span> is an  <span style="color: black"><span><strong><em>in-neighbor</em></strong></span></span> of a vertex <span class="math inline">\(v\)</span> if <span class="math inline">\((u,v) \in E\)</span> and an  <span style="color: black"><span><strong><em>out-neighbor</em></strong></span></span> if <span class="math inline">\((v,u)  
 \in E\)</span>. We also say two edges or arcs are neighbors if they share a vertex.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
A vertex $u$ is a~\defn{neighbor} of, or equivalently~\defn{adjacent}
 to, a vertex $v$ in a graph $G = (V,E)$ if there is an edge $\{u,v\}
 \in E$.  For a directed graph a vertex $u$ is an~\defn{in-neighbor}
 of a vertex $v$ if $(u,v) \in E$ and an~\defn{out-neighbor} if $(v,u)
 \in E$.  We also say two edges or arcs are neighbors if they share a
 vertex.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Neighborhood
]]>
</field> 
<field name="title_src">
<![CDATA[
Neighborhood
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>For an undirected graph <span class="math inline">\(G = (V,E)\)</span>, the  <span style="color: black"><span><strong><em>neighborhood</em></strong></span></span> <span class="math inline">\(N_G(v)\)</span> of a vertex <span class="math inline">\(v \in V\)</span> is its set of all neighbors of <span class="math inline">\(v\)</span>, i.e., <span class="math inline">\(N_G(v) = \left\{ u \;|\; \{u,v\} \in E \right\}\)</span>. For a directed graph we use <span class="math inline">\(N_G^+(v)\)</span> to indicate the set of out-neighbors and <span class="math inline">\(N_G^-(v)\)</span> to indicate the set of in-neighbors of <span class="math inline">\(v\)</span>. If we use <span class="math inline">\(N_G(v)\)</span> for a directed graph, we mean the out neighbors.</p>
<p>The neighborhood of a set of vertices <span class="math inline">\(U \subseteq V\)</span> is the union of their neighborhoods, e.g.,</p>
<ul>
<li><p><span class="math inline">\(N_G(U) = \bigcup_{u \in U} N_G(y)\)</span>, or</p></li>
<li><p><span class="math inline">\(N_G^+(U) = \bigcup_{u \in U} N_G^+(u)\)</span>.</p></li>
</ul>
]]>
</field> 
<field name="body_src">
<![CDATA[
For an undirected graph $G = (V,E)$, the~\defn{neighborhood} $N_G(v)$ 
of a vertex $v \in V$ is its set of all neighbors of $v$, i.e.,
$N_G(v) = \csetf{u}{\{u,v\} \in E}$. 
For a directed graph we use $N_G^+(v)$ to indicate the set of 
out-neighbors and $N_G^-(v)$ to indicate the set of in-neighbors of
$v$.  If we use $N_G(v)$ for a directed graph, we mean the out 
neighbors.  

The neighborhood of a set of vertices $U \subseteq V$ is the union of
their neighborhoods, e.g.,

\begin{itemize}
\item  $N_G(U) = \bigcup_{u \in U} N_G(y)$, or
\item $N_G^+(U) = \bigcup_{u \in U} N_G^+(u)$.
\end{itemize}
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Incidence
]]>
</field> 
<field name="title_src">
<![CDATA[
Incidence
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>We say an edge is  <span style="color: black"><span><strong><em>incident</em></strong></span></span> on a vertex if the vertex is one of its endpoints. Similarly we say a vertex is incident on an edge if it is one of the endpoints of the edge.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
We say an edge is~\defn{incident} on a vertex if the vertex is one of
its endpoints.  Similarly we say a vertex is incident on an edge if it
is one of the endpoints of the edge.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Degree
]]>
</field> 
<field name="title_src">
<![CDATA[
Degree
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>The  <span style="color: black"><span><strong><em>degree</em></strong></span></span> <span class="math inline">\(d_G(v)\)</span> of a vertex <span class="math inline">\(v \in V\)</span> in a graph <span class="math inline">\(G =  
 (V,E)\)</span> is the size of the neighborhood <span class="math inline">\(|N_G(v)|\)</span>. For directed graphs we use  <span style="color: black"><span><strong><em>in-degree</em></strong></span></span> <span class="math inline">\(d_G^-(v) = |N_G^-(v)|\)</span> and  <span style="color: black"><span><strong><em>out-degree</em></strong></span></span> <span class="math inline">\(d_G^+(v) = |N_G^+(v)|\)</span>. We will drop the subscript <span class="math inline">\(G\)</span> when it is clear from the context which graph we’re talking about.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
The~\defn{degree} $d_G(v)$ of a vertex $v \in V$ in a graph $G =
 (V,E)$ is the size of the neighborhood $|N_G(v)|$.  For directed
 graphs we use~\defn{in-degree} $d_G^-(v) = |N_G^-(v)|$
 and~\defn{out-degree} $d_G^+(v) = |N_G^+(v)|$.  We will drop the
 subscript $G$ when it is clear from the context which graph we're
 talking about.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Path
]]>
</field> 
<field name="title_src">
<![CDATA[
Path
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A  <span style="color: black"><span><strong><em>path</em></strong></span></span> in a graph is a sequence of adjacent vertices. More formally for a graph <span class="math inline">\(G = (V,E)\)</span>, we define the set of all paths in <span class="math inline">\(G\)</span>, written <span class="math inline">\(\textit{Paths}(G)\)</span> as <span class="math display">\[\textit{Paths}(G) = \left\{ P  
  \in V^+ \;|\; 1 \leq i &lt; |P|, (P_i, P_{i+1}) \in E \right\},\]</span> where <span class="math inline">\(V^+\)</span> indicates all positive length sequences of vertices (allowing for repeats). The length of a path is one less than the number of vertices in the path—i.e., it is the number of edges in the path. A path in a finite graph can have infinite length. A  <span style="color: black"><span><strong><em>simple path</em></strong></span></span> is a path with no repeated vertices. Please see the remark below, however.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
A~\defn{path} in a graph is a sequence of adjacent vertices.  
%
More formally for a graph $G = (V,E)$, we define the set of all paths
in $G$, written $\textit{Paths}(G)$ as 
\[
\textit{Paths}(G) = \csetf{P
  \in V^+}{1 \leq i < |P|, (P_i, P_{i+1}) \in E},
\]
%
where $V^+$ indicates all positive length sequences of vertices
(allowing for repeats).
%
The length of a path is one less than the number of vertices in the
path---i.e., it is the number of edges in the path.  A path in a
finite graph can have infinite length.  A~\defn{simple path} is a path
with no repeated vertices.  Please see the remark below, however.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="remark">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Some authors use the terms walk for path, and path for simple path. Even in this book when it is clear from the context we will sometimes drop the “simple” from simple path.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Some authors use the terms walk for path, and path for
simple path.   Even in this book when it is clear from the context
we will sometimes drop the ``simple'' from simple path.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Reachability and connectivity
]]>
</field> 
<field name="title_src">
<![CDATA[
Reachability and connectivity
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A vertex <span class="math inline">\(v\)</span> is  <span style="color: black"><span><strong><em>reachable</em></strong></span></span> from a vertex <span class="math inline">\(u\)</span> in <span class="math inline">\(G\)</span> if there is a path starting at <span class="math inline">\(u\)</span> and ending at <span class="math inline">\(v\)</span> in <span class="math inline">\(G\)</span>. We use <span class="math inline">\(R_G(u)\)</span> to indicate the set of all vertices reachable from <span class="math inline">\(u\)</span> in <span class="math inline">\(G\)</span>. An undirected graph is  <span style="color: black"><span><strong><em>connected</em></strong></span></span> if all vertices are reachable from all other vertices. A directed graph is  <span style="color: black"><span><strong><em>strongly connected</em></strong></span></span> if all vertices are reachable from all other vertices.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
A vertex $v$ is~\defn{reachable} from a vertex $u$ in $G$ if there is
a path starting at $u$ and ending at $v$ in $G$.  We use $R_G(u)$ to
indicate the set of all vertices reachable from $u$ in $G$.  An
undirected graph is~\defn{connected} if all vertices are reachable
from all other vertices.  A directed graph is~\defn{strongly
  connected} if all vertices are reachable from all other vertices.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Cycles
]]>
</field> 
<field name="title_src">
<![CDATA[
Cycles
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>In a directed graph a  <span style="color: black"><span><strong><em>cycle</em></strong></span></span> is a path that starts and ends at the same vertex. A cycle can have length one (i.e. a  <span style="color: black"><span><strong><em>self loop</em></strong></span></span>). A  <span style="color: black"><span><strong><em>simple cycle</em></strong></span></span> is a cycle that has no repeated vertices other than the start and end vertices being the same. In an undirected graph a (simple)  <span style="color: black"><span><strong><em>cycle</em></strong></span></span> is a path that starts and ends at the same vertex, has no repeated vertices other than the first and last, and has length at least three. In this course we will exclusively talk about simple cycles and hence, as with paths, we will often drop simple.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
In a directed graph a~\defn{cycle} is a path that starts and ends at
the same vertex.    A cycle can have length one (i.e. a~\defn{self loop}).
A~\defn{simple cycle} is a
cycle that has no repeated vertices other than the start and end
vertices being the same.
In an undirected graph a (simple)~\defn{cycle} is a path that
starts and ends at the same vertex, has no repeated vertices other
than the first and last, and has length at least three.
In this course we will exclusively talk
about simple cycles and hence, as with paths, we will often drop
simple.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="exercise">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Why is important in a undirected graph to require that a cycle has length at least three? Why is important that we do not allow repeated vertices?</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Why is important in a undirected graph to require that a cycle has
length at least three?  Why is important that we do not allow repeated
vertices?
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Trees and forests
]]>
</field> 
<field name="title_src">
<![CDATA[
Trees and forests
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>An undirected graph with no cycles is a  <span style="color: black"><span><strong><em>forest</em></strong></span></span>. A forest that is connected is a  <span style="color: black"><span><strong><em>tree</em></strong></span></span>. A directed graph is a forest (or tree) if when all edges are converted to undirected edges it is undirected forest (or tree). A  <span style="color: black"><span><strong><em>rooted tree</em></strong></span></span> is a tree with one vertex designated as the root. For a directed graph the edges are typically all directed toward the root or away from the root.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
An undirected graph with no cycles is a~\defn{forest}.
%
A forest that is connected is a~\defn{tree}.  
%
A directed graph is a forest (or tree) if when all edges are converted
to undirected edges it is undirected forest (or tree).  
%
A~\defn{rooted tree} is a tree with one vertex designated as the root.
For a directed graph the edges are typically all directed toward the
root or away from the root.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Directed acyclic graphs
]]>
</field> 
<field name="title_src">
<![CDATA[
Directed acyclic graphs
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A directed graph with no cycles is a  <span style="color: black"><span><strong><em>directed acyclic graph</em></strong></span></span> (DAG).</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
A directed graph with no cycles is a~\defn{directed acyclic graph} (DAG).
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Distance
]]>
</field> 
<field name="title_src">
<![CDATA[
Distance
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>The  <span style="color: black"><span><strong><em>distance</em></strong></span></span> <span class="math inline">\(\delta_G(u,v)\)</span> from a vertex <span class="math inline">\(u\)</span> to a vertex <span class="math inline">\(v\)</span> in a graph <span class="math inline">\(G\)</span> is the shortest path (minimum number of edges) from <span class="math inline">\(u\)</span> to <span class="math inline">\(v\)</span>. It is also referred to as the  <span style="color: black"><span><strong><em>shortest path length</em></strong></span></span> from <span class="math inline">\(u\)</span> to <span class="math inline">\(v\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
The~\defn{distance} $\delta_G(u,v)$ from a vertex $u$ to a vertex $v$
in a graph $G$ is the shortest path (minimum number of edges) from $u$
to $v$.  It is also referred to as the~\defn{shortest path length}
from $u$ to $v$.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Diameter
]]>
</field> 
<field name="title_src">
<![CDATA[
Diameter
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>The  <span style="color: black"><span><strong><em>diameter</em></strong></span></span> of a graph <span class="math inline">\(G\)</span> is the maximum shortest path length over all pairs of vertices in <span class="math inline">\(G\)</span>, i.e., <span class="math inline">\(\max\left\{ \delta_G(u,v) : u, v \in V \right\}\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
The~\defn{diameter} of a graph $G$ is the maximum shortest path length over all
pairs of vertices in $G$, i.e., $\max\cset{\delta_G(u,v) : u, v \in V}$.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Multigraphs
]]>
</field> 
<field name="title_src">
<![CDATA[
Multigraphs
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Sometimes graphs allow multiple edges between the same pair of vertices, called  <span style="color: black"><span><strong><em>multi-edges</em></strong></span></span>. Graphs with multi-edges are called  <span style="color: black"><span><strong><em>multi-graphs</em></strong></span></span>. We will allow multi-edges in a couple algorithms just for convenience.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Sometimes graphs allow multiple edges between the same pair of
vertices, called~\defn{multi-edges}.  Graphs with multi-edges are
called~\defn{multi-graphs}.  We will allow multi-edges in a couple
algorithms just for convenience.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Sparse and Dense Graphs
]]>
</field> 
<field name="title_src">
<![CDATA[
Sparse and Dense Graphs
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>By convention we will use the following definitions: <span class="math display">\[\begin{aligned}
n &amp; = |V|\\  
m &amp; = |E|  \end{aligned}\]</span> Note that a directed graph can have at most <span class="math inline">\(n^2\)</span> edges (including self loops) and an undirected graph at most <span class="math inline">\(n(n-1)/2\)</span>. We informally say that a graph is  <span style="color: black"><span><strong><em>sparse</em></strong></span></span> if <span class="math inline">\(m \ll n^2\)</span> and  <span style="color: black"><span><strong><em>dense</em></strong></span></span> otherwise. In most applications graphs are very sparse, often with only a handful of neighbors per vertex when averaged across vertices, although some vertices could have high degree. Therefore, the emphasis in the design of graph algorithms, at least for this book, is typically on algorithms that work well for sparse graphs.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
By convention we will use the following definitions:
\begin{eqnarray*}
n & = |V|\\
m & = |E|
\end{eqnarray*}
Note that a directed graph can have at most $n^2$ edges (including self loops)
and an undirected graph at most $n(n-1)/2$.  We informally say that a graph
is~\defn{sparse} if $m \ll n^2$ and~\defn{dense} otherwise.  In most
applications graphs are very sparse, often with only a handful of neighbors per
vertex when averaged across vertices, although some vertices could have high
degree.  Therefore, the emphasis in the design of graph algorithms, at least for
this book, is typically on algorithms that work well for sparse graphs.
]]>
</field> 
</atom> 

</block></block></block> 

<block name="subsection">
<field name="title">
<![CDATA[
Weighted Graphs
]]>
</field> 
<field name="title_src">
<![CDATA[
Weighted Graphs
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Many applications of graphs require associating weights or other values with the edges of a graph.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Many applications of graphs require associating weights or other
values with the edges of a graph.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Weighted and Edge-Labeled Graphs
]]>
</field> 
<field name="title_src">
<![CDATA[
Weighted and Edge-Labeled Graphs
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>An <span style="color: black"><span><strong><em>edge-labeled graph</em></strong></span></span> or a <span style="color: black"><span> <strong><em>weighted graph</em></strong></span></span> is a triple <span class="math inline">\(G = (E,V,w)\)</span> where <span class="math inline">\(w\!: E \to L\)</span> is a function mapping edges or directed edges to their labels (weights) , and <span class="math inline">\(L\)</span> is the set of possible labels (weights).</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
An \defn{edge-labeled graph} or a \defn{ weighted graph} is a triple
$G = (E,V,w)$ where $w\!: E \to L$ is a function mapping edges or
directed edges to their labels (weights) , and $L$ is the set of
possible labels (weights).
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>In a graph, if the data associated with the edges are real numbers, we often use the term “weight” to refer to the edge labels, and use the term “weighted graph” to refer to the graph. In the general case, we use the terms “edge label” and edge-labeled graph. Weights or other values on edges could represent many things, such as a distance, or a capacity, or the strength of a relationship.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
In a graph, if the data associated with the edges are real numbers, we
often use the term ``weight'' to refer to the edge labels, and use the
term ``weighted graph'' to refer to the graph.  In the general case,
we use the terms ``edge label'' and edge-labeled graph.  Weights or
other values on edges could represent many things, such as a distance,
or a capacity, or the strength of a relationship.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="example">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>An example directed weighted graph.</p>
<p><img src="./media/dir-graph1.jpg" alt="image" style="width:1.5in" /></p>
]]>
</field> 
<field name="body_src">
<![CDATA[
An example directed weighted graph.

\begin{center}
\includegraphics[width=1.5in]{./media/dir-graph1.jpg}
\end{center}
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="remark">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>As it may be expected, basic terminology on graphs defined above straightforwardly extend to weighted graphs.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
As it may be expected, basic terminology on graphs defined above
straightforwardly extend to weighted graphs.
]]>
</field> 
</atom> 

</block></block></block> 

<block name="subsection">
<field name="title">
<![CDATA[
Subgraphs
]]>
</field> 
<field name="title_src">
<![CDATA[
Subgraphs
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>When working with graphs, we sometimes wish to refer to parts of a graph. To this end, we can use the notion of a subgraph, which refers to a graph contained in a larger graph. A subgraph can be defined as any subsets of edges and vertices that together constitute a well defined graph.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
When working with graphs, we sometimes wish to refer to parts of a
graph.  To this end, we can use the notion of a subgraph, which refers
to a graph contained in a larger graph. A subgraph can be defined as
any subsets of edges and vertices that together constitute a well
defined graph.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Subgraph
]]>
</field> 
<field name="title_src">
<![CDATA[
Subgraph
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Let <span class="math inline">\(G = (V,E)\)</span> and <span class="math inline">\(H = (V&#39;, E&#39;)\)</span> be two graphs. <span class="math inline">\(H\)</span> is a subgraph of if <span class="math inline">\(V&#39; \subseteq V\)</span> and <span class="math inline">\(E&#39; \subseteq E\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Let $G = (V,E)$ and $H = (V', E')$ be two graphs.  $H$ is a
subgraph of if $V' \subseteq V$ and $E' \subseteq E$.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="note">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Note that since <span class="math inline">\(H\)</span> is a graph, the vertices defining each edge are in the vertex set <span class="math inline">\(V&#39;\)</span>, i.e., for an undirected graph <span class="math inline">\(E&#39; \subseteq  
\binom{V&#39;}{2}\)</span>. There are many possible subgraphs of a graph.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Note that since $H$ is a graph, the vertices defining each edge are in
the vertex set $V'$, i.e., for an undirected graph $E' \subseteq
\binom{V'}{2}$.  There are many possible subgraphs of a graph.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>An important class of subgraphs are  <span style="color: black"><span><strong><em>vertex-induced subgraphs</em></strong></span></span>, which are maximal subgraphs defined by a set of vertices. A vertex-induced subgraph is maximal in the sense that it contains all the edges that it can possibly contain. In general when an object is said to be a  <span style="color: black"><span><strong><em>maximal</em></strong></span></span> “X”, it means that nothing more can be added to the object without violating the property “X”.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
An important class of subgraphs are~\defn{vertex-induced subgraphs},
which are maximal subgraphs defined by a set of vertices.
%
A vertex-induced subgraph is maximal in the sense that it contains all
the edges that it can possibly contain.
%
In general when an object is said to be a~\defn{maximal} ``X'', it
means that nothing more can be added to the object without violating
the property ``X''.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Vertex-Induced Subgraph
]]>
</field> 
<field name="title_src">
<![CDATA[
Vertex-Induced Subgraph
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>The subgraph of <span class="math inline">\(G = (V,E)\)</span> induced by <span class="math inline">\(V&#39; \subseteq V\)</span> is the graph <span class="math inline">\(H  
= (V&#39;,E&#39;)\)</span> where <span class="math inline">\(E&#39; = \left\{ \left\{ u,v \right\} \in E \;|\; u \in V&#39;, v \in V&#39; \right\}\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
The subgraph of $G = (V,E)$ induced by $V' \subseteq V$ is the graph $H
= (V',E')$ where $E' = \csetf{\cset{u,v} \in E}{u \in V', v \in V'}$.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="example">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Some vertex induced subgraphs:</p>
<table>
<tbody>
<tr class="odd">
<td style="text-align: center;"><img src="./media/contract-example1.jpg" alt="image" style="width:2in" /></td>
</tr>
<tr class="even">
<td style="text-align: center;">Original graph</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="./media/induced-example.jpg" alt="image" style="width:2in" /></td>
</tr>
<tr class="even">
<td style="text-align: center;">Induced by <span class="math inline">\(\left\{ \texttt{a},\texttt{b},\texttt{c},\texttt{e},\texttt{f} \right\}\)</span></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="./media/induced-example2.jpg" alt="image" style="width:1in" /></td>
</tr>
<tr class="even">
<td style="text-align: center;">Induced by <span class="math inline">\(\left\{ \texttt{a},\texttt{b},\texttt{c},\texttt{d} \right\}\)</span></td>
</tr>
</tbody>
</table>
]]>
</field> 
<field name="body_src">
<![CDATA[
Some vertex induced subgraphs:
\begin{center}
\begin{tabular}{c}
\includegraphics[width=2in]{./media/contract-example1.jpg}
\\
Original graph 
\\
\includegraphics[width=2in]{./media/induced-example.jpg}
\\
 Induced by
$\cset{\vname{a},\vname{b},\vname{c},\vname{e},\vname{f}}$ 
\\
\includegraphics[width=1in]{./media/induced-example2.jpg}
\\
Induced by $\cset{\vname{a},\vname{b},\vname{c},\vname{d}}$
\end{tabular}
\end{center}
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Although we will not use it in this book, it is also possible to define an induced subgraph in terms of a set of edges by including in the graph all the vertices incident on the edges.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Although we will not use it in this book, it is also possible to
define an induced subgraph in terms of a set of edges by including in
the graph all the vertices incident on the edges.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Edge-Induced Subgraph
]]>
</field> 
<field name="title_src">
<![CDATA[
Edge-Induced Subgraph
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>The subgraph of <span class="math inline">\(G = (V,E)\)</span> induced by <span class="math inline">\(E&#39; \subseteq E\)</span> is a graph <span class="math inline">\(H  
= (V&#39;,E&#39;)\)</span> where <span class="math inline">\(V&#39; = \cup_{e \in E} e\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
The subgraph of $G = (V,E)$ induced by $E' \subseteq E$ is a graph $H
= (V',E')$ where $V' = \cup_{e \in E} e$.
]]>
</field> 
</atom> 

</block></block></block> 

<block name="subsection">
<field name="title">
<![CDATA[
Connectivity
]]>
</field> 
<field name="title_src">
<![CDATA[
Connectivity
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Recall that in a graph (either directed or undirected) a vertex <span class="math inline">\(v\)</span> is reachable from a vertex <span class="math inline">\(u\)</span> if there is a path from <span class="math inline">\(u\)</span> to <span class="math inline">\(v\)</span>. Also recall that an undirected graph is connected if all vertices are reachable from all other vertices.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Recall that in a graph (either directed or undirected) a vertex $v$ is
reachable from a vertex $u$ if there is a path from $u$ to $v$.  Also
recall that an undirected graph is connected if all vertices are
reachable from all other vertices.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="example">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
ex:gc_two-graphs
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Two example graphs shown. The first in connected; the second is not.</p>
<table>
<tbody>
<tr class="odd">
<td style="text-align: center;"><img src="./media/contract-example1.jpg" alt="image" style="width:2in" /></td>
</tr>
<tr class="even">
<td style="text-align: center;"><span>Graph 1</span></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="./media/contract-example4.jpg" alt="image" style="width:2in" /></td>
</tr>
<tr class="even">
<td style="text-align: center;"><span>Graph 2</span></td>
</tr>
</tbody>
</table>
<p>An important subgraph of an undirected graph is a connected component of a graph, defined below.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Two example graphs shown. The first in connected; the second is not.

\begin{tabular}{c}
\includegraphics[width=2in]{./media/contract-example1.jpg}
\\
{Graph 1}
\\
\includegraphics[width=2in]{./media/contract-example4.jpg}
\\
{Graph 2}
\end{tabular}

An important subgraph of an undirected graph is a connected component
of a graph, defined below.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Connected Component
]]>
</field> 
<field name="title_src">
<![CDATA[
Connected Component
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Let <span class="math inline">\(G = (V,E)\)</span> be an undirected graph. A subgraph <span class="math inline">\(H\)</span> of <span class="math inline">\(G\)</span> is a  <span style="color: black"><span><strong><em>connected component</em></strong></span></span> of <span class="math inline">\(G\)</span> if it is a maximally connected subgraph of <span class="math inline">\(G\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Let $G = (V,E)$ be an undirected graph.  A subgraph $H$ of $G$ is
a~\defn{connected component} of $G$ if it is a maximally connected
subgraph of $G$.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Here, “maximally connected component” means we cannot add any more vertices and edges from <span class="math inline">\(G\)</span> to <span class="math inline">\(H\)</span> without disconnecting <span class="math inline">\(H\)</span>. In the graphs shown in the example above, the first graph has one connected component (hence it is connected); the second has two connected components.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Here, ``maximally connected component'' means we cannot add any more
vertices and edges from $G$ to $H$ without disconnecting $H$. In the
graphs shown in the example above, the first graph has one connected
component (hence it is connected); the second has two connected
components.
%
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="note">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>We can specify a connected component of a graph by simply specifying the vertices in the component. For example, the connected components of the second graph in the example above can be specified as <span class="math inline">\(\left\{ \texttt{a},\texttt{b},\texttt{c},\texttt{d} \right\}\)</span> and <span class="math inline">\(\left\{ \texttt{e},\texttt{f} \right\}\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
We can specify a connected component of a graph by simply specifying the
vertices in the component.
%
For example, the connected components of the second graph in the
example above can be specified as
%
$\cset{\vname{a},\vname{b},\vname{c},\vname{d}}$
%
and 
%
$\cset{\vname{e},\vname{f}}$.
]]>
</field> 
</atom> 

</block></block></block> 

<block name="subsection">
<field name="title">
<![CDATA[
Graph Partition
]]>
</field> 
<field name="title_src">
<![CDATA[
Graph Partition
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="gram">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>Recall that a partition of a set <span class="math inline">\(A\)</span> is a set <span class="math inline">\(P\)</span> of non-empty subsets of <span class="math inline">\(A\)</span> such that each element of <span class="math inline">\(A\)</span> is in exactly one subset, also called block, <span class="math inline">\(B \in P\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
Recall that a partition of a set $A$ is a set $P$ of non-empty subsets
of $A$ such that each element of $A$ is in exactly one subset, also
called block, $B \in P$.
%
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Graph Partition
]]>
</field> 
<field name="title_src">
<![CDATA[
Graph Partition
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A  <span style="color: black"><span><strong><em>graph partition</em></strong></span></span> is a partition of the vertex set of the graph. More precisely, given graph <span class="math inline">\(G = (V,E)\)</span>, we define a partition of <span class="math inline">\(G\)</span> as a set of graphs <span class="math display">\[P = \{ G_1 = (V_1,E_1) \ldots G_k = (V_k,E_k) \},\]</span> where <span class="math inline">\(\{V_1, \ldots, V_k\}\)</span> is a (set) partition of <span class="math inline">\(V\)</span> and <span class="math inline">\(G_1,  
\ldots, G_k\)</span> are vertex-induced subgraphs of <span class="math inline">\(G\)</span> with respect to <span class="math inline">\(V_1,  
\ldots, V_k\)</span> respectively. As in set partitions, we use the term  <span style="color: black"><span><strong><em>part</em></strong></span></span> or  <span style="color: black"><span><strong><em>block</em></strong></span></span> to refer to each vertex-induced subgraph <span class="math inline">\(G_1, \ldots, G_k\)</span>.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
A~\defn{graph partition} is a partition of the vertex set of the
graph.
%
More precisely, given graph $G = (V,E)$, we define a partition of $G$
as a set of graphs 
\[
P = \{ G_1 = (V_1,E_1) \ldots G_k = (V_k,E_k) \},
\]
where $\{V_1, \ldots, V_k\}$ is a (set) partition of $V$ and $G_1,
\ldots, G_k$ are vertex-induced subgraphs of $G$ with respect to $V_1,
\ldots, V_k$ respectively.  
%
As in set partitions, we use the term~\defn{part} or~\defn{block} to
refer to each vertex-induced subgraph $G_1, \ldots, G_k$.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Internal and Cut Edges
]]>
</field> 
<field name="title_src">
<![CDATA[
Internal and Cut Edges
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>In a graph partition, we can distinguish between two kinds of edges: internal edges and cut edges.   <span style="color: black"><span><strong><em>Internal edges</em></strong></span></span> are edges that are within a block;  <span style="color: black"><span><strong><em>cut edges</em></strong></span></span> are edges that are between blocks. One way to partition a graph is to make each connected component a block. In such a partition, there are no cut edges between the partitions.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
In a graph partition, we can distinguish between two kinds of edges:
internal edges and cut edges. ~\defn{Internal edges} are edges that
are within a block;~\defn{cut edges} are edges that are between
blocks.
%
One way to partition a graph is to make each connected component a
block. In such a partition, there are no cut edges between the
partitions.
]]>
</field> 
</atom> 

</block></block></block> 

<block name="subsection">
<field name="title">
<![CDATA[
Trees
]]>
</field> 
<field name="title_src">
<![CDATA[
Trees
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Tree
]]>
</field> 
<field name="title_src">
<![CDATA[
Tree
]]>
</field> 
<field name="label">
...NOT.PROVIDED.LABEL...
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>An undirected graph is a  <span style="color: black"><span><strong><em>tree</em></strong></span></span> if it does not have cycles and it is connected. A  <span style="color: black"><span><strong><em>rooted tree</em></strong></span></span> is a tree with a distinguished root node that can be used to access all other nodes. An example of a rooted tree along with the associated terminology is given in below.</p>
]]>
</field> 
<field name="body_src">
<![CDATA[
An undirected graph is a~\defn{tree} if it does not have cycles and it is
connected.  A~\defn{rooted tree} is a tree with a distinguished root
node that can be used to access all other nodes.
%
%\defref{prelim_rootedtree}).  
%
An example of a rooted tree along with
the associated terminology is given in below.
% \exref{prelim_rootedtree}.
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="definition">
<field name="title">
<![CDATA[
Rooted Trees
]]>
</field> 
<field name="title_src">
<![CDATA[
Rooted Trees
]]>
</field> 
<field name="label">
def:prelim_rootedtree
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>A  <span style="color: black"><span><strong><em>rooted tree</em></strong></span></span> is a directed graph such that</p>
<ol>
<li><p>One of the vertices is the  <span style="color: black"><span><strong><em>root</em></strong></span></span> and it has no in edges.</p></li>
<li><p>All other vertices have one in-edge.</p></li>
<li><p>There is a path from the root to all other vertices.</p></li>
</ol>
<p>Rooted trees are common structures in computing and have their own dedicated terminology.</p>
<ul>
<li><p>By convention we use the term  <span style="color: black"><span><strong><em>node</em></strong></span></span> instead of vertex to refer to the vertices of a rooted tree.</p></li>
<li><p>A node is a  <span style="color: black"><span><strong><em>leaf</em></strong></span></span> if it has no out edges, and an  <span style="color: black"><span><strong><em>internal node</em></strong></span></span> otherwise.</p></li>
<li><p>For each directed edge <span class="math inline">\((u,v)\)</span>, <span class="math inline">\(u\)</span> is the  <span style="color: black"><span><strong><em>parent</em></strong></span></span> of <span class="math inline">\(v\)</span>, and <span class="math inline">\(v\)</span> is a  <span style="color: black"><span><strong><em>child</em></strong></span></span> of <span class="math inline">\(u\)</span>.</p></li>
<li><p>For each path from <span class="math inline">\(u\)</span> to <span class="math inline">\(v\)</span> (including the empty path with <span class="math inline">\(u = v\)</span>), <span class="math inline">\(u\)</span> is an  <span style="color: black"><span><strong><em>ancestor</em></strong></span></span> of <span class="math inline">\(v\)</span>, and <span class="math inline">\(v\)</span> is a  <span style="color: black"><span><strong><em>descendant</em></strong></span></span> of <span class="math inline">\(u\)</span>.</p></li>
<li><p>For a vertex <span class="math inline">\(v\)</span>, its  <span style="color: black"><span><strong><em>depth</em></strong></span></span> is the length of the path from the root to <span class="math inline">\(v\)</span> and its  <span style="color: black"><span><strong><em>height</em></strong></span></span> is the longest path from <span class="math inline">\(v\)</span> to any leaf.</p></li>
<li><p>The  <span style="color: black"><span><strong><em>height of a tree</em></strong></span></span> is the height of its root.</p></li>
<li><p>For any node <span class="math inline">\(v\)</span> in a tree, the  <span style="color: black"><span><strong><em>subtree rooted at <span class="math inline">\(v\)</span></em></strong></span></span> is the rooted tree defined by taking the induced subgraph of all vertices reachable from <span class="math inline">\(v\)</span> (i.e. the vertices and the directed edges between them), and making <span class="math inline">\(v\)</span> the root.</p></li>
<li><p>As with graphs, an  <span style="color: black"><span><strong><em>ordered rooted tree</em></strong></span></span> is a rooted tree in which the out edges (children) of each node are ordered.</p></li>
</ul>
]]>
</field> 
<field name="body_src">
<![CDATA[
A~\defn{rooted tree} is a directed graph such that
\begin{enumerate}
\item 
One of the vertices is the~\defn{root} and it has no in edges.
\item 
All other vertices have one in-edge.
\item
There is a path from the root to all other vertices.
\end{enumerate}

Rooted trees are common structures in computing and have their own
dedicated terminology.
%
\begin{itemize}
\item
By convention we use the term~\defn{node} instead of vertex to refer
to the vertices of a rooted tree.  
%
\item
A node is a~\defn{leaf} if it has no out edges, and an~\defn{internal
  node} otherwise.  
%

\item
For each directed edge $(u,v)$, $u$ is the~\defn{parent} of $v$, and
$v$ is a~\defn{child} of $u$.  
%

\item
For each path from $u$ to $v$ (including the empty path with $u = v$),
$u$ is an~\defn{ancestor} of $v$, and $v$ is a~\defn{descendant} of
$u$.
%
\item
For a vertex $v$, its~\defn{depth} is the length of the path from the
root to $v$ and its~\defn{height} is the longest path from $v$ to any
leaf.  
%

\item
The~\defn{height of a tree} is the height of its root.  
%

\item
For any node $v$ in a tree, the~\defn{subtree rooted at $v$} is the
rooted tree defined by taking the induced subgraph of all vertices
reachable from $v$ (i.e. the vertices and the directed edges between
them), and making $v$ the root.  
%

\item
As with graphs, an~\defn{ordered rooted tree} is a rooted tree in
which the out edges (children) of each node are ordered.
\end{itemize}
]]>
</field> 
</atom> 

</block></block><block name="subsubsection"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><block name="group"><field name="label">...NOT.PROVIDED.LABEL...</field><field name="parents">...NOT.PROVIDED.PARENTS...</field><field name="title">...NOT.PROVIDED.TITLE...</field><field name="title_src">...NOT.PROVIDED.TITLE...</field><field name="unique">0</field><atom name="example">
<field name="title">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="title_src">
<![CDATA[
...NOT.PROVIDED.TITLE...
]]>
</field> 
<field name="label">
ex:prelim_rootedtree
</field> 
<field name="parents">
...NOT.PROVIDED.PARENTS...
</field> 
<field name="body">
<![CDATA[
<p>An example rooted tree follows.</p>
<p><img src="./media/rootedtree.jpg" alt="image" style="width:2in" /></p>
<table>
<tbody>
<tr class="odd">
<td style="text-align: right;">root</td>
<td style="text-align: center;">:</td>
<td style="text-align: left;"><span class="math inline">\(A\)</span></td>
</tr>
<tr class="even">
<td style="text-align: right;">leaves</td>
<td style="text-align: center;">:</td>
<td style="text-align: left;"><span class="math inline">\(E\)</span>, <span class="math inline">\(C\)</span>, <span class="math inline">\(F\)</span>, <span class="math inline">\(G\)</span>, and <span class="math inline">\(H\)</span></td>
</tr>
<tr class="odd">
<td style="text-align: right;">internal nodes</td>
<td style="text-align: center;">:</td>
<td style="text-align: left;"><span class="math inline">\(A\)</span>, <span class="math inline">\(B\)</span>, and <span class="math inline">\(D\)</span></td>
</tr>
<tr class="even">
<td style="text-align: right;">children of <span class="math inline">\(A\)</span></td>
<td style="text-align: center;">:</td>
<td style="text-align: left;"><span class="math inline">\(B\)</span>, <span class="math inline">\(C\)</span> and <span class="math inline">\(D\)</span></td>
</tr>
<tr class="odd">
<td style="text-align: right;">parent of <span class="math inline">\(E\)</span></td>
<td style="text-align: center;">:</td>
<td style="text-align: left;"><span class="math inline">\(B\)</span></td>
</tr>
<tr class="even">
<td style="text-align: right;">descendants of <span class="math inline">\(A\)</span></td>
<td style="text-align: center;">:</td>
<td style="text-align: left;">all nodes, including <span class="math inline">\(A\)</span> itself</td>
</tr>
<tr class="odd">
<td style="text-align: right;">ancestors of <span class="math inline">\(F\)</span></td>
<td style="text-align: center;">:</td>
<td style="text-align: left;"><span class="math inline">\(F\)</span>, <span class="math inline">\(D\)</span> and <span class="math inline">\(A\)</span></td>
</tr>
<tr class="even">
<td style="text-align: right;">depth of <span class="math inline">\(F\)</span></td>
<td style="text-align: center;">:</td>
<td style="text-align: left;">2</td>
</tr>
<tr class="odd">
<td style="text-align: right;">height of <span class="math inline">\(B\)</span></td>
<td style="text-align: center;">:</td>
<td style="text-align: left;">1</td>
</tr>
<tr class="even">
<td style="text-align: right;">height of the tree</td>
<td style="text-align: center;">:</td>
<td style="text-align: left;">2</td>
</tr>
<tr class="odd">
<td style="text-align: right;">subtree rooted at <span class="math inline">\(D\)</span></td>
<td style="text-align: center;">:</td>
<td style="text-align: left;">the rooted tree consisting of <span class="math inline">\(D\)</span>, <span class="math inline">\(F\)</span>, <span class="math inline">\(G\)</span> and <span class="math inline">\(H\)</span></td>
</tr>
</tbody>
</table>
]]>
</field> 
<field name="body_src">
<![CDATA[
An example rooted tree follows.
\begin{center}
  \includegraphics[width=2in]{./media/rootedtree.jpg}
\end{center}
\begin{center}
\begin{tabular}{rcl}
root & : & $A$\\
leaves & : & $E$, $C$, $F$, $G$, and $H$\\
internal nodes & : & $A$, $B$, and $D$\\
children of $A$ & : & $B$, $C$ and $D$\\
parent of $E$ & : & $B$\\
descendants of $A$ & : & all nodes, including $A$ itself\\
ancestors of $F$ & : & $F$, $D$ and $A$\\
depth of $F$ & : & 2\\
height of $B$ & : & 1\\
height of the tree & : & 2\\
subtree rooted at $D$ & : & the rooted tree consisting of $D$, $F$, $G$ and $H$
\end{tabular}
\end{center}
]]>
</field> 
</atom> 

</block></block></block> 
</block> 
</block>
